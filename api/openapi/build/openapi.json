{
  "openapi": "3.0.3",
  "info": {
    "title": "Cerply Certified API",
    "version": "v0-plan",
    "description": "Certified Plan endpoint (PLAN/MOCK)"
  },
  "paths": {
    "/api/admin/certified/sources": {
      "post": {
        "summary": "Create source (admin preview)",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "type": "object", "required": ["name","baseUrl"], "properties": { "name": {"type":"string"}, "baseUrl": {"type":"string","format":"uri"}, "notes": {"type":"string"} } } } } },
        "responses": { "200": { "description": "Created", "content": { "application/json": { "schema": { "type":"object", "required":["source_id"], "properties": { "source_id": {"type":"string"} } } } } }, "400": { "description": "Bad request" }, "401": { "description": "Unauthorized" }, "413": { "description": "Too large" } }
      },
      "get": {
        "summary": "List sources (admin preview)",
        "responses": { "200": { "description": "List", "content": { "application/json": { "schema": { "type": "object", "properties": { "sources": { "type": "array", "items": { "type": "object" } } } } } } }, "401": { "description": "Unauthorized" } }
      },
      "options": { "summary":"CORS preflight", "responses": { "204": { "description": "No Content" } } }
    },
    "/api/admin/certified/items/ingest": {
      "post": {
        "summary": "Ingest item (admin preview)",
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "type": "object", "required": ["title","url"], "properties": { "title": {"type":"string"}, "url": {"type":"string","format":"uri"}, "tags": {"type":"array","items":{"type":"string"}} } } } } },
        "responses": { "200": { "description": "Queued", "content": { "application/json": { "schema": { "type":"object", "required":["item_id"], "properties": { "item_id": {"type":"string"} } } } } }, "400": { "description": "Bad request" }, "401": { "description": "Unauthorized" }, "413": { "description": "Too large" } }
      },
      "options": { "summary":"CORS preflight", "responses": { "204": { "description": "No Content" } } }
    },
    "/api/admin/certified/items": {
      "get": {
        "summary": "List items (admin preview)",
        "parameters": [ { "name": "status", "in": "query", "schema": { "type":"string", "enum": ["pending","approved","rejected"] } } ],
        "responses": { "200": { "description": "List", "content": { "application/json": { "schema": { "type": "object", "properties": { "items": { "type": "array", "items": { "type": "object" } } } } } } }, "401": { "description": "Unauthorized" } }
      },
      "options": { "summary":"CORS preflight", "responses": { "204": { "description": "No Content" } } }
    },
    "/api/admin/certified/items/{id}": {
      "get": {
        "summary": "Get item (admin preview)",
        "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type":"string" } } ],
        "responses": { "200": { "description": "Item", "content": { "application/json": { "schema": { "type": "object" } } } }, "401": { "description": "Unauthorized" }, "404": { "description": "Not found" } }
      },
      "options": { "summary":"CORS preflight", "responses": { "204": { "description": "No Content" } } }
    },
    "/api/admin/certified/items/{id}/approve": {
      "post": {
        "summary": "Approve item (admin preview)",
        "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type":"string" } } ],
        "responses": { "200": { "description": "Approved" }, "401": { "description": "Unauthorized" }, "404": { "description": "Not found" } }
      },
      "options": { "summary":"CORS preflight", "responses": { "204": { "description": "No Content" } } }
    },
    "/api/admin/certified/items/{id}/reject": {
      "post": {
        "summary": "Reject item (admin preview)",
        "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type":"string" } } ],
        "responses": { "200": { "description": "Rejected" }, "401": { "description": "Unauthorized" }, "404": { "description": "Not found" } }
      },
      "options": { "summary":"CORS preflight", "responses": { "204": { "description": "No Content" } } }
    },
    "/api/auth/session": {
      "post": {
        "summary": "Create anonymous session",
        "responses": {
          "200": {
            "description": "Session created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionCreateResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get current session",
        "responses": {
          "200": {
            "description": "Current session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionGetResponse"
                }
              }
            }
          },
          "401": {
            "description": "No session"
          }
        }
      },
      "delete": {
        "summary": "Delete session",
        "responses": {
          "200": {
            "description": "Deleted"
          }
        }
      },
      "options": {
        "summary": "CORS preflight",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/certified/plan": {
      "post": {
        "summary": "Certified plan",
        "description": "Returns a deterministic plan when CERTIFIED_MODE=plan; returns mock when CERTIFIED_MODE=mock; otherwise 501/503.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Plan response (plan or mock mode)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload"
          },
          "415": {
            "description": "Unsupported media type (expect application/json)"
          },
          "501": {
            "description": "Stub (enabled but not implemented)"
          },
          "503": {
            "description": "Certified disabled"
          }
        }
      },
      "options": {
        "summary": "CORS preflight",
        "responses": {
          "204": {
            "description": "No Content; includes CORS headers"
          }
        }
      }
    },
    "/api/certified/verify": {
      "post": {
        "summary": "Verify certified plan lock (preview)",
        "description": "Re-canonicalizes a plan and compares the hash to the provided lock.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload"
          },
          "415": {
            "description": "Unsupported media type (expect application/json)"
          }
        }
      },
      "options": {
        "summary": "CORS preflight",
        "responses": {
          "204": {
            "description": "No Content; includes CORS headers"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SessionCreateResponse": {
        "type": "object",
        "required": [
          "session_id",
          "csrf_token",
          "expires_at"
        ],
        "properties": {
          "session_id": {
            "type": "string"
          },
          "csrf_token": {
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SessionGetResponse": {
        "type": "object",
        "required": [
          "session_id",
          "expires_at"
        ],
        "properties": {
          "session_id": {
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PlanRequest": {
        "type": "object",
        "required": [
          "topic"
        ],
        "properties": {
          "topic": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200
          },
          "level": {
            "type": "string",
            "enum": [
              "beginner",
              "intermediate",
              "advanced"
            ]
          },
          "goals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PlanItem": {
        "type": "object",
        "required": [
          "id",
          "type",
          "front",
          "back"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "card"
            ]
          },
          "front": {
            "type": "string"
          },
          "back": {
            "type": "string"
          }
        }
      },
      "PlanResponse": {
        "type": "object",
        "required": [
          "status",
          "request_id",
          "endpoint",
          "mode",
          "enabled",
          "provenance",
          "plan"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ok"
            ]
          },
          "request_id": {
            "type": "string"
          },
          "endpoint": {
            "type": "string",
            "enum": [
              "certified.plan"
            ]
          },
          "mode": {
            "type": "string",
            "enum": [
              "plan",
              "mock"
            ]
          },
          "enabled": {
            "type": "boolean"
          },
          "provenance": {
            "type": "object",
            "required": [
              "planner",
              "proposers",
              "checker"
            ],
            "properties": {
              "planner": {
                "type": "string"
              },
              "proposers": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "checker": {
                "type": "string"
              }
            }
          },
          "plan": {
            "type": "object",
            "required": [
              "title",
              "items"
            ],
            "properties": {
              "title": {
                "type": "string"
              },
              "items": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/PlanItem"
                }
              }
            }
          }
        }
      },
      "VerifyRequest": {
        "type": "object",
        "required": [
          "plan",
          "lock"
        ],
        "properties": {
          "plan": {
            "type": "object",
            "required": [
              "title",
              "items"
            ],
            "properties": {
              "title": {
                "type": "string"
              },
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PlanItem"
                },
                "minItems": 1
              }
            }
          },
          "lock": {
            "type": "object",
            "required": [
              "algo",
              "hash"
            ],
            "properties": {
              "algo": {
                "type": "string",
                "enum": [
                  "blake3",
                  "sha256"
                ]
              },
              "hash": {
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "request_id": {
                "type": "string"
              }
            }
          }
        }
      },
      "VerifyResponse": {
        "type": "object",
        "required": [
          "ok",
          "computed"
        ],
        "properties": {
          "ok": {
            "type": "boolean"
          },
          "computed": {
            "type": "object",
            "required": [
              "algo"
            ],
            "properties": {
              "algo": {
                "type": "string"
              },
              "hash": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "size_bytes": {
                "type": "integer"
              }
            }
          },
          "provided": {
            "type": "object",
            "properties": {
              "algo": {
                "type": "string"
              },
              "hash": {
                "type": "string"
              }
            }
          },
          "mismatch": {
            "type": "object",
            "properties": {
              "reason": {
                "type": "string"
              },
              "detail": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}