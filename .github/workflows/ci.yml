name: CI

on:
  push:
    branches: [main, master]
  pull_request:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  api:
    name: Build & Test (API)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Build API
        run: npm -w api run build

      - name: Run API tests
        env:
          NODE_ENV: test
          RATE_LIMIT_ENABLED: 'false'
        run: npm -w api run test


      # NEW â€” start server before smoke
      - name: Start API (background)
        env:

          NODE_ENV: production
          PORT: 8080
          RATE_LIMIT_ENABLED: 'false'
        run: |
          # Launch the API from the workspace so Node can resolve its deps
          npm -w api run start &
          echo $! > /tmp/api_pid.txt

          # Wait up to 60s for /api/health to respond
          for i in {1..60}; do

            if curl -fsS http://localhost:8080/api/health >/dev/null; then
              echo "API is up"
              break
            fi
            sleep 1
          done

          # One last check so the step fails early if server didn't come up
          curl -fsS http://localhost:8080/api/health >/dev/null

      - name: API smoke (health/plan/analytics)
        env:
          SMOKE_ALLOW_503: '1'
        run: |
          chmod +x api/scripts/smoke-local.sh
          bash api/scripts/smoke-local.sh

      - name: DB migrate (if DATABASE_URL)
        if: ${{ env.DATABASE_URL != '' }}
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          npm -w api run db:migrate || true


      - name: API smoke (legacy ingest)
        if: ${{ env.LEGACY_INGEST_SMOKE == 'true' || env.LEGACY_INGEST_SMOKE == '1' }}
        env:
          LEGACY_INGEST_SMOKE: ${{ env.LEGACY_INGEST_SMOKE }}
          API_BASE: http://localhost:8080
        run: |
          chmod +x scripts/smoke-stg.sh
          bash scripts/smoke-stg.sh | sed -n '1,200p'

      - name: Stop API
        if: always()
        run: |
          if [ -f /tmp/api_pid.txt ]; then

            kill "$(cat /tmp/api_pid.txt)" 2>/dev/null || true
          fi
          # Fallback: ensure any lingering API node process is stopped
          pkill -f "node .*api/dist/index.js" 2>/dev/null || true

  pr-typecheck:
    if: ${{ github.event_name == 'pull_request' }}
    name: Typecheck (API & Web)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps (api)
        working-directory: api
        run: npm install --no-audit --no-fund

      - name: Typecheck (api)
        working-directory: api
        run: npm run typecheck

      - name: Install deps (web)
        working-directory: web
        run: npm install --no-audit --no-fund

      - name: Typecheck (web)
        working-directory: web
        run: npm run typecheck

  docker:
    name: Build & Push Docker image
    needs: api
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch)
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/cerply-api
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
            type=ref,event=tag
            type=semver,pattern={{version}}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}