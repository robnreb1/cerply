name: Staging Deploy

on:
  workflow_dispatch:
  push:
    branches: [ "staging" ]

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      actions: read
    steps:
      - name: Resolve staging deploy hook
        id: hook
        env:
          RENDER_STAGING_DEPLOY_HOOK_SECRET: ${{ secrets.RENDER_STAGING_DEPLOY_HOOK }}
        run: |
          set -euo pipefail
          # Fallback to the hook you gave me if the secret isn't set.
          HOOK="${RENDER_STAGING_DEPLOY_HOOK_SECRET:-https://api.render.com/deploy/srv-d34sosgdl3ps73868q0g?key=QtUaDQzEhc0}"
          echo "value=$HOOK" >> "$GITHUB_OUTPUT"

      - name: Trigger Render staging deploy
        run: |
          set -euo pipefail
          curl -fsS -X POST "${{ steps.hook.outputs.value }}"

      - name: Wait for staging health
        env:
          BASE: https://cerply-api-staging.onrender.com
        run: |
          set -euo pipefail
          for i in {1..90}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$BASE/api/health") || true
            if [ "$code" = "200" ]; then
              echo "OK: health 200"
              curl -sS -D /tmp/h.txt "$BASE/api/health" | jq .
              grep -i '^x-api:' /tmp/h.txt || true
              exit 0
            fi
            sleep 5
          done
          echo "Health never reached 200" >&2
          exit 1

      - name: Version + image headers (best-effort)
        env:
          BASE: https://cerply-api-staging.onrender.com
        run: |
          set -euo pipefail
          curl -sS -D /tmp/v.txt "$BASE/api/version" | jq . || true
          echo "--- headers ---"
          grep -Ei '^x-image-(tag|revision|created):' /tmp/v.txt || true


