name: Staging Deploy

on:
  push:
    branches: [staging]
  workflow_dispatch: {}

concurrency:
  group: staging-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy to Render (staging)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve staging deploy hook
        id: resolve_hook
        env:
          RENDER_STAGING_DEPLOY_HOOK_SECRET: ${{ secrets.RENDER_STAGING_DEPLOY_HOOK }}
        run: |
          set -euo pipefail
          HOOK="${RENDER_STAGING_DEPLOY_HOOK_SECRET:-https://api.render.com/deploy/srv-d34sosgdl3ps73868q0g?key=QtUaDQzEhc0}"
          echo "value=$HOOK" >> "$GITHUB_OUTPUT"

      - name: Trigger Render staging deploy
        run: |
          set -euo pipefail
          curl -fsS -X POST "${{ steps.resolve_hook.outputs.value }}"

      - name: Wait for staging health
        env:
          BASE: https://cerply-api-staging.onrender.com
        run: |
          set -euo pipefail
          for i in {1..90}; do
            code="$(curl -s -o /dev/null -w "%{http_code}" "$BASE/api/health" || true)"
            if [ "$code" = "200" ]; then
              curl -sS -D /tmp/h.txt "$BASE/api/health" | jq .
              exit 0
            fi
            sleep 5
          done
          echo "Health never reached 200" >&2
          exit 1

      - name: Version + image headers (best-effort)
        env:
          BASE: https://cerply-api-staging.onrender.com
        run: |
          set -euo pipefail
          curl -sS -D /tmp/v.txt "$BASE/api/version" || true
          echo "::group::x-image-*"
          grep -Ei '^x-image-(tag|revision|created):' /tmp/v.txt || true
          echo "::endgroup::"


