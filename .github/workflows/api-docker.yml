name: Build & Push API Docker image

on:
  push:
    branches: [ main, staging ]
    paths:
      - 'api/**'
      - '.github/workflows/api-docker.yml'
  pull_request:
    branches: [ main, staging ]
    paths:
      - 'api/**'
      - '.github/workflows/api-docker.yml'
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/cerply-api

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./api
          file: ./api/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Optional: trigger Render deploy (uncomment when secrets are added)
      # - name: Trigger Render deploy
      #   if: github.event_name != 'pull_request'
      #   env:
      #     RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      #     RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID_API_PROD }}
      #   run: |
      #     curl -fsS -X POST \
      #       -H "Authorization: Bearer $RENDER_API_KEY" \
      #       -H "Content-Type: application/json" \
      #       https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys \
      #       -d '{"clearCache": false}'
