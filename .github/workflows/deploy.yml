name: Deploy to Vercel
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch: {}

jobs:
  deploy-preview:
    name: deploy-preview (pull_request)
    if: ${{ github.event_name == 'pull_request' && github.head_ref != 'staging' }}
    continue-on-error: ${{ github.head_ref == 'staging' }}
    concurrency:
      group: vercel-preview-${{ github.head_ref || github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        working-directory: ./web
        run: npm ci || npm install --no-audit --no-fund
      - name: Build project
        working-directory: ./web
        run: npm run build
      - name: Deploy to Vercel (Preview) with retry
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./web
        run: |
          set -euo pipefail
          for i in 1 2 3 4 5; do
            RC=0
            npx vercel@latest --yes --token="$VERCEL_TOKEN" --confirm --prebuilt || RC=$?
            if [ "$RC" = "0" ]; then
              exit 0
            fi
            echo "Vercel preview failed (attempt $i). Sleeping 60s and retryingâ€¦"
            sleep 60
          done
          echo "Vercel preview failed after retries" >&2
          exit 1

  deploy-production:
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch' }}
    concurrency:
      group: vercel-prod-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        working-directory: ./web
        run: npm ci || npm install --no-audit --no-fund
      - name: Build project
        working-directory: ./web
        run: npm run build
      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./web
          vercel-args: '--prod=true'

# Concurrency to avoid overlapping deploys
concurrency:
  group: vercel-${{ github.ref }}
  cancel-in-progress: true
