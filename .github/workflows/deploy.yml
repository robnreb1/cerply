name: Deploy to Vercel
on:
  push:
    branches: [main, master, staging]
  pull_request:
    branches: [main, master, staging]

jobs:
  deploy-preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      
      - name: Debug - Show Secret Values
        run: |
          echo "VERCEL_TOKEN length: ${#VERCEL_TOKEN}"
          echo "VERCEL_ORG_ID length: ${#VERCEL_ORG_ID}"
          echo "VERCEL_PROJECT_ID length: ${#VERCEL_PROJECT_ID}"
          echo "VERCEL_ORG_ID starts with: ${VERCEL_ORG_ID:0:4}"
          echo "VERCEL_PROJECT_ID starts with: ${VERCEL_PROJECT_ID:0:4}"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      
      - name: Install dependencies
        working-directory: ./web
        run: npm ci
      
      - name: Build project
        working-directory: ./web
        run: npm run build
      
      - name: Deploy to Vercel (Preview) - Direct CLI
        run: |
          npx vercel@latest --prod=false --token $VERCEL_TOKEN --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        working-directory: ./web

  deploy-production:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/staging')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      
      - name: Debug - Show Secret Values
        run: |
          echo "VERCEL_TOKEN length: ${#VERCEL_TOKEN}"
          echo "VERCEL_ORG_ID length: ${#VERCEL_ORG_ID}"
          echo "VERCEL_PROJECT_ID length: ${#VERCEL_PROJECT_ID }}"
          echo "VERCEL_ORG_ID starts with: ${VERCEL_ORG_ID:0:4}"
          echo "VERCEL_PROJECT_ID starts with: ${VERCEL_PROJECT_ID:0:4}"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      
      - name: Install dependencies
        working-directory: ./web
        run: npm ci
      
      - name: Build project
        working-directory: ./web
        run: npm run build
      
      - name: Deploy to Vercel (Production) - Direct CLI
        run: |
          npx vercel@latest --prod=true --token $VERCEL_TOKEN --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        working-directory: ./web
