name: PR E2E (preview URL)

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find preview URL from PR comments (sticky)
        id: find
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          url=$(gh pr view ${{ github.event.pull_request.number }} --json comments -q '.comments[]?|select(.body|test("^âœ… PR Preview ready"))|.body' | grep -Eo 'https://[a-z0-9-]+\.vercel\.app' | head -n1 || true)
          echo "url=${url}" >> "$GITHUB_OUTPUT"
          test -n "$url" && echo "Preview URL: $url" || echo "No preview URL found; skipping E2E"

      - name: Setup Node
        if: steps.find.outputs.url != ''
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install web deps
        if: steps.find.outputs.url != ''
        working-directory: web
        run: npm ci || npm i

      - name: Install Playwright
        if: steps.find.outputs.url != ''
        working-directory: web
        run: npx playwright install --with-deps

      - name: Run E2E (PLAN preview)
        if: steps.find.outputs.url != ''
        working-directory: web
        env:
          BASE_URL: ${{ steps.find.outputs.url }}
          NEXT_PUBLIC_API_BASE: https://cerply-api-staging-latest.onrender.com
          PLANNER_ENGINE: mock
          CERTIFIED_MODE: plan
        run: |
          set -euo pipefail
          echo "HEAD=$(git rev-parse HEAD || echo unknown)"
          echo "--- scripts from web/package.json ---"
          node -e "console.log(JSON.stringify(require('./package.json').scripts, null, 2))"
          npm run test:e2e -- --reporter=list

      - name: Run E2E (STUDY preview)
        if: steps.find.outputs.url != ''
        working-directory: web
        env:
          BASE_URL: ${{ steps.find.outputs.url }}
          NEXT_PUBLIC_API_BASE: https://cerply-api-staging-latest.onrender.com
          PLANNER_ENGINE: mock
          CERTIFIED_MODE: plan
        run: |
          set -euo pipefail
          npx playwright test e2e/certified.study.preview.spec.ts --config=playwright.config.ts --reporter=list


